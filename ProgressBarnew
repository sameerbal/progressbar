package newVersion;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.List;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;
import javax.swing.text.DefaultCaret;


public class ProgressBar {
	public static JTextArea area = new JTextArea();
	public static JTextArea console(final InputStream out, final PrintWriter in) {
		//final 
		// handle "System.out"
		new SwingWorker<Void, String>() {
			@Override
			protected Void doInBackground() throws Exception {
				Scanner s = new Scanner(out);
				while (s.hasNextLine())
					publish(s.nextLine() + "\n");
				return null;
			}

			@Override
			protected void process(List<String> chunks) {
				for (String line : chunks)
					area.append(line);
				//
			}
		}.execute();

		// handle "System.in"
		area.addKeyListener(new KeyAdapter() {
			private StringBuffer line = new StringBuffer();

			@Override
			public void keyTyped(KeyEvent e) {
				char c = e.getKeyChar();
				if (c == KeyEvent.VK_ENTER) {
					in.println(line);
					line.setLength(0);
				} else if (c == KeyEvent.VK_BACK_SPACE) {
					line.setLength(line.length() - 1);
				} else if (!Character.isISOControl(c)) {
					line.append(e.getKeyChar());
				}
			}
		});

		return area;
	}

	public static void invoke() throws IOException {

		// 1. create the pipes
		PipedInputStream inPipe = new PipedInputStream();
		PipedInputStream outPipe = new PipedInputStream();

		// 2. set the System.in and System.out streams
		System.setIn(inPipe);
		System.setOut(new PrintStream(new PipedOutputStream(outPipe), true));

		PrintWriter inWriter = new PrintWriter(new PipedOutputStream(inPipe), true);

		// 3. create the gui
		JFrame frame = new JFrame("Application Status ");
		frame.add(console(outPipe, inWriter));
		frame.setSize(400, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
		 JScrollPane scroll = new JScrollPane (area);
		    scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		          scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		    frame.add(scroll);
		    frame.setVisible(true);
		

		// 4. write some output (to JTextArea)
		//System.out.println("1");

	}
	
}
